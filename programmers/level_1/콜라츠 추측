문제 설명

1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.

​

1-1. 입력된 수가 짝수라면 2로 나눕니다. 

1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다. 

2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다. 

​

예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. 

위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solution을 완성해 주세요. 

단, 작업을 500번을 반복해도 1이 되지 않는다면 –1을 반환해 주세요.

​

제한 사항

입력된 수, num은 1 이상 8000000 미만인 정수입니다.

입출력 예

n

result

6

8

16

4

626331

-1

입출력 예 설명

입출력 예 #1

문제의 설명과 같습니다.

입출력 예 #2

16 -> 8 -> 4 -> 2 -> 1 이되어 총 4번만에 1이 됩니다.

입출력 예 #3

626331은 500번을 시도해도 1이 되지 못하므로 -1을 리턴해야합니다.





내 풀이 < 질문하기 참고!! >

class Solution { int cnt = 0; public int solution(int num) { return num==1?0:collatz((long)num); } int collatz(long num){ if(num%2==0){ num = num/2; }else{ num = num*3+1; } cnt++; if(cnt>500 && num!=1){ return -1; } return num==1?cnt:collatz(num); } }

실행속도 0.01 ~ 0.10ms

질문하기를 보고 해결한 부분!

1. 입력받은 값(num)이 1인 경우 처리
num 이 1인 경우 함수를 돌리지 않아도 되니까 return 0; 

2. collatz() 의 매개변수를 int타입이 아닌 long타입으로 바꿈 
num이 홀수여서 collatz()에서 num = num*3+1; 계산을 했을 때,
int의 최대범위를 넘어가는 숫자가 나오면 오버플로우가 발생한다.
그래서 int보다 범위가 큰 long타입으로 바꿈!!

​

​

다른사람풀이

코딩테스트 연습 / 연습문제 / 콜라츠 추측 / 다른 사람의 풀이 / - , - , - , - , - 외 6 명

class Solution { public int solution(int num) { long n = (long)num; for(int i =0; i<500; i++){ if(n==1) return i; n = (n%2==0) ? n/2 : n*3+1; } return -1; } }

0.02 ~ 0.07ms

