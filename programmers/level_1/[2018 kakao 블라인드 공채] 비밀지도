문제 설명

비밀지도

네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다.

​

1. 지도는 한 변의 길이가 n인 정사각형 배열 형태로, 각 칸은 공백(" ) 또는벽(#") 두 종류로 이루어져 있다.

2. 전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 지도 1과 지도 2라고 하자. 

지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다. 

지도 1과 지도 2에서 모두 공백인 부분은 전체 지도에서도 공백이다.

3. 지도 1과 지도 2는 각각 정수 배열로 암호화되어 있다.

4. 암호화된 배열은 지도의 각 가로줄에서 벽 부분을 1, 공백 부분을 0으로 부호화했을 때 얻어지는 이진수에 해당하는 값의 배열이다.

네오가 프로도의 비상금을 손에 넣을 수 있도록, 비밀지도의 암호를 해독하는 작업을 도와줄 프로그램을 작성하라.

​

입력 형식

입력으로 지도의 한 변 크기 n 과 2개의 정수 배열 arr1, arr2가 들어온다.

1 ≦ n ≦ 16

arr1, arr2는 길이 n인 정수 배열로 주어진다.

정수 배열의 각 원소 x를 이진수로 변환했을 때의 길이는 n 이하이다. 즉, 0 ≦ x ≦ 2n - 1을 만족한다.

​

출력 형식

원래의 비밀지도를 해독하여 '#', 공백으로 구성된 문자열 배열로 출력하라.

​

입출력 예제

매개변수

값

n

5

arr1

[9, 20, 28, 18, 11]

arr2

[30, 1, 21, 17, 28]

출력

["#####","# # #", "### #", "# ##", "#####"]

매개변수

값

n

6

arr1

[46, 33, 33 ,22, 31, 50]

arr2

[27 ,56, 19, 14, 14, 10]

출력

["######", "### #", "## ##", " #### ", " #####", "### # "]

해설 링크: http://tech.kakao.com/2017/09/27/kakao-blind-recruitment-round-1/




내 풀이

class Solution { public String[] solution(int n, int[] arr1, int[] arr2) { String[] answer = new String[n]; int[][] binary1 = new int[n][n]; int[][] binary2 = new int[n][n]; // arr1, arr2의 10진수 2진수로 변환 for(int i=0; i<arr1.length; i++){ for(int j=0; j<binary1.length; j++){ binary1[i][n-j-1] = arr1[i]%2; arr1[i] = arr1[i]/2; } } for(int i=0; i<arr2.length; i++){ for(int j=0; j<binary2.length; j++){ binary2[i][n-j-1] = arr2[i]%2; arr2[i] = arr2[i]/2; } } // 2진수의 1부분 '#', 0부분 " " (1이 둘 중 하나라도 있으면) for(int i=0; i<n ; i++){ StringBuilder sb = new StringBuilder(); for(int j=0; j<binary1.length; j++){ if(binary1[i][j]==1 || binary2[i][j]==1){ sb.append('#'); }else{ sb.append(" "); } } answer[i] = sb.toString(); } return answer; } }

10진수를 2진수로 변환하는 부분을 설명하자면, 
만약 arr1[0] 값이 20이라고 했을 때,
2 20
2 10 ...0
2 5  ...0
2 2  ...1
2 1  ...0
​  0  ...1
20을 2로 나눈 마지막 나머지부터 순서대로
10100 이게 20을 2진수로 나타낸 값이다.

이걸 활용해서 10진수를 2진수로 바꾸는 식을 만들었다!!

​

​

다른사람풀이1

코딩테스트 연습 / 2018 KAKAO BLIND RECRUITMENT / [1차] 비밀지도 / 다른 사람의 풀이 / -

class Solution { public String[] solution(int n, int[] arr1, int[] arr2) { int[] container = new int[n]; for (int i = 0; i < n; i++) { container[i] = arr1[i] | arr2[i]; } String[] answer = new String[n]; for (int i = 0; i < n; i++) { String ans = ""; int remainder = container[i]; for (int j = 0; j < n; j++) { if(remainder%2 == 1) { ans = "#" + ans; } else { ans = " " + ans; } remainder = remainder/2; } answer[i] = ans; } return answer; } }

와 비트연산이 있었구나...
container[i] = arr1[i] | arr2[i];
여기서 쓰인 | 는 비트연산자로 데이터를 비트 단위로 연산하는 연산자! 

" 비트 논리 연산자는 그 대상이 boolean타입일 경우에는 일반 논리 연산자로 활용되지만 대상이 정수형일 경우에는 비트 논리연산자로 활용됩니다. 
비트 연산은 두 값을 비트 단위로 나열한 뒤 각 자릿수를 비트 연산자로 연산합니다. 
각 자릿수의 연산은 독립적이며 다른 자릿수에 영향을 주지 않습니다. "

[Java] 비트(Shift) 연산자 사용법 & 예제
비트 연산자는 데이터를 비트 단위로 연산합니다. 그러므로 0과 1로 표현이 가능한 정수 타입만 비트 연산이 가능합니다. 비트 연산자는 기능에 따라 비트 이동연산자, 비트 논리연산자로 구분합니다.  비트 이동..
coding-factory.tistory.com

비트 단위로 나열한다는게 결국 2진수로 표현하는 거랑 같으니까
나처럼 if(binary1[i][j]==1 || binary2[i][j]==1)이라고 처리하지 않고 이렇게 처리하면 더 쉬운 거였다.
굳이 2진수로 바꿔서 저장하지 않더라도 이런 방법이 있구나...를 알려준 풀이였다!!

​

​

다른사람풀이2

코딩테스트 연습 / 2018 KAKAO BLIND RECRUITMENT / [1차] 비밀지도 / 다른 사람의 풀이 / 뀨 , - , 김수호 , nanana , 김평안 외 3 명

class Solution { public String[] solution(int n, int[] arr1, int[] arr2) { String[] result = new String[n]; for (int i = 0; i < n; i++) { result[i] = Integer.toBinaryString(arr1[i] | arr2[i]); } for (int i = 0; i < n; i++) { result[i] = String.format("%" + n + "s", result[i]); result[i] = result[i].replaceAll("1", "#"); result[i] = result[i].replaceAll("0", " "); } return result; } }

오호 Integer클래스에 이런 함수가 있었구나!!

Integer.toBinaryString(int i) : 데이터를 2진수로 바꾼 문자열을 리턴

비슷한 함수로는
Integer.toOctalString(int i) : 데이터를 2진수로 바꾼 문자열을 리턴
Integer.toHexString(int i) : 데이터를 2진수로 바꾼 문자열을 리턴

반대 함수로는
Integer.valueOf(문자열,진수) : 문자열을 진수로 바꿔서 int형으로 리턴


마지막 for문에서

result[i] = String.format("%" + n + "s", result[i]); 
를 하는 이유!

String.foramt(표현형식,문자열) : 문자열의 형식을 지정하는 함수
[Java] String.format 을 이용한 문자열 형식 설정하기
public static String format(String format, Object... args); public static String format(Locale l, String format, Object... args); String 의 static 메서드인 format 메서드는 문자열의 형식을 설정하는..

blog.jiniworld.me


만약 n이 5인 경우,
result[i] = String.format("%5s",result[i]); 로 이는 

1. 오른쪽 정렬로 
2. 문자열의 길이가 최대 길이인 n보다 작을 경우 공백을 추가한다.
는 의미가 된다!!

원래 result[i] = "1110"이었다면 
길이가 4이니까 왼쪽에 1만큼 공백을 추가​해서
result[i] = " 1110" 으로 만들어주는 거~

