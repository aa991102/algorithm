문제 설명

함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.

​

제한 조건

x는 -10000000 이상, 10000000 이하인 정수입니다.

n은 1000 이하인 자연수입니다.

​

입출력 예

x

n

answer

2

5

[2,4,6,8,10]

4

3

[4,8,12]

-4

2

[-4, -8]




내 풀이

class Solution { public long[] solution(int x, int n) { long[] answer = new long[n]; for(long i = 0; i < n; i++){ answer[(int)i] = x * (i + 1); } return answer; } }

for 지역 변수 i의 타입을 long으로 준 이유는 
질문하기에서 답글다신 분의 글을 가져와보겠습니다....

위의 함수 solution()의 매개변수 x를 int형으로 하고, for문 지역변수 i도 int형으로 하는 경우에 
테스트케이스 13,14번에서 오류가 발생해서 
매개변수x의 타입이 잘못 주어져 변환해야 한다고 하는데, 
이를 보고 답글다시는 상황입니다.

--------------------------------
김대현
2020.11.6 10:40

int x를 long x 변환해야 하는 이유 남깁니다.

문제를 푸실때 요구사항의 특징을 잘 파악하는 것이 실무에서 가장 중요합니다.

x는 최대 1000만, n은 1000 까지 입력이 가능합니다.
연산으로 최대로 나올수 있는 최대값은 100억이 된다는 이야기입니다.

int자료형의 최대 표현범위는 약 -21억 ~+21억 입니다.
그래서 int형 x과 int형 n의 연산결과가 표현범위를 벗어나 에러가 난겁니다.
( int와 int를 연산하면 결과도 int형으로 반환​됩니다.)

그에 비해 long형은 표현범위가 일단 조단위가 넘기 때문에 위의 연산결과를 받아오기에 충분합니다.
int 와 long 데이터 표현범위가 다른데 연산을 하면 데이터가 큰 long형으로 연산결과가 나옵니다.
그러니 int x 를 long x로 표현하면 실행이 되는겁니다.

int x를 long x로 바꾸는 것도 방법이지만, 알고리즘 문제를 푸실때 매개변수타입을 바꾸는 일보다는
주어진 매개변수타입 그대로 활용하는 것이 좋을 것같습니다.
알고리즘을 그대로 사용하신다면 int x대신, int i를 long i로 변환하는것이 좋을것같습니다.

​

