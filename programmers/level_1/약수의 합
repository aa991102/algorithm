문제 설명

정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요.

​

제한 사항

n은 0 이상 3000이하인 정수입니다.

​

입출력 예

n

return

12

28

5

6

입출력 예 설명

입출력 예 #1

12의 약수는 1, 2, 3, 4, 6, 12입니다. 이를 모두 더하면 28입니다.

입출력 예 #2

5의 약수는 1, 5입니다. 이를 모두 더하면 6입니다.

내 풀이

class Solution {
public int solution(int n) {
int answer = n;
for(int i=1;i<=n/2;i++){
if(n%i==0){ answer += i;
}
}
return answer;
}
}


어떤 분이 내 풀이와 유사한 풀이를 보고 댓글로

"정확하게는 절반이 아니라 제곱근까지 입니다" (이해완료)​
"n을 n/2 말고 약수 값으로 바꾸면 보다 효율적으로 고칠 수 있습니다. for문 돌아가는 숫자를 절반 이하로 떨어뜨릴 수 있어요"
라고 하셨는데, 
아직은 배움이 부족한지... 이해하지를 못해서 다음에 다시 보는걸로...

--> [2021.11.09] 이해완료!!
n == 12 일 경우,
1 * 12
2 * 6
3 * 4
n의 약수는 1, 2, 3, 4, 6, 12 니까

class Solution {
public int solution(int n) {
int answer = n;
for(int i=1;i<=Math.sqrt(n);i++){ // Math.sqrt(): 제곱근 구하는 함수
int j = n%i;
if(j==0){
answer += i + j;
}
}
return answer;
}
}
