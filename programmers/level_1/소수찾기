문제 설명

1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하는 함수, solution을 만들어 보세요.

소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.

(1은 소수가 아닙니다.)

​

제한 조건

n은 2이상 1000000이하의 자연수입니다.

​

입출력 예

n

result

10

4

5

3

입출력 예 설명

입출력 예 #1

1부터 10 사이의 소수는 [2,3,5,7] 4개가 존재하므로 4를 반환

입출력 예 #2

1부터 5 사이의 소수는 [2,3,5] 3개가 존재하므로 3를 반환





내 풀이 (시간초과 실패)

class Solution { public int solution(int n) { int answer = 0; for (double i=2;i<n+1;i++){ if((i%2==0 && i!=2) || (i%3==0 && i!=3)){ continue; } int cnt = 0; for(int j=1;j<n+1;j++){ if(i%j==0){ cnt++; } } if(cnt==2){ answer++; } } return answer; } }

이중 for문으로 2부터 n까지의 각 숫자를 1부터 n까지 나누어봤을 때, 
그 나누어 떨어지는 총 개수가 2개인 경우 소수++
라고 코딩을 해봤다.....

그런데! 

n이 2이상 1000000이하의 자연수라고 제한 조건에 나와있는데
만약 n이 1000000인 경우 총 1000000*1000000 번 만큼 for문이 돌아가게된다...^^....

그래서 채점해봤을때
정확성 테스트 12문제/ 효율성 테스트 4문제 중에
3 / 4 문제가 시간 초과로 실패했다.

​

​

다른사람풀이1

https://ju-nam2.tistory.com/19

class Solution { public int solution(int n) { int answer = 0; for(int i=2; i<=n; i++) { boolean flag = true; for(int j=2; j<=Math.sqrt(i); j++) { if(i%j==0) { flag = false; break; } } if(flag==true) answer++; } return answer; } }

자연수 n이 소수이기 위한 필요 충분 조건은 

'n이 n의 제곱근보다 작은 어떤 소수로도 나눠지지 않는다. '

https://ju-nam2.tistory.com/19

+)

이 블로그에서 위의 얘기를 하시면서 

"수를 수로 나누어 떨어진다면 그때의 몫은 반드시 그 수의 제곱근보다 작기 때문이다."
라고 이유를 달아 주셨는데,

제곱근보다 작거나 같은 것이지 않을까?
왜냐면 9를 3으로 나눴을때 나누어 떨어지는데, 그 몫이 3으로 9의 제곱근인 3과 같으니까....




다른사람풀이2 < 에라토스테네스의 체 구현>
https://ju-nam2.tistory.com/19

class Solution { public int solution(int n) { int answer = 0; int[] number = new int[n+1]; //2부터 n까지의 수를 배열에 넣는다. for(int i=2; i<=n; i++) { number[i] = i; } //2부터 시작해서 그의 배수들을 0으로 만든다. //후에 0이면 넘어가고 아니면 그의 배수들을 다시 0으로 만든다. for(int i=2; i<=n; i++) { if(number[i]==0) continue; for(int j= 2*i; j<=n; j += i) { number[j] = 0; } } //배열에서 0이 아닌 것들의 개수를 세준다. for(int i=0; i<number.length; i++) { if(number[i]!=0) { answer++; } } return answer; }

수학에서 소수를 찾는 방법인 에라토스테네스의 체 를 이용한 방법이다. 

