문제 설명

양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.

​

제한 조건

x는 1 이상, 10000 이하인 정수입니다.

​

입출력 예

arr

return

10

true

12

true

11

false

13

false

입출력 예 설명

​

입출력 예 #1

10의 모든 자릿수의 합은 1입니다. 10은 1로 나누어 떨어지므로 10은 하샤드 수입니다.

​

입출력 예 #2

12의 모든 자릿수의 합은 3입니다. 12는 3으로 나누어 떨어지므로 12는 하샤드 수입니다.

​

입출력 예 #3

11의 모든 자릿수의 합은 2입니다. 11은 2로 나누어 떨어지지 않으므로 11는 하샤드 수가 아닙니다.

​

입출력 예 #4

13의 모든 자릿수의 합은 4입니다. 13은 4로 나누어 떨어지지 않으므로 13은 하샤드 수가 아닙니다.





내 풀이

class Solution { public boolean solution(int x) { int tempX = x; int sum = 0; while(tempX>0){ sum += tempX%10; tempX /= 10; } return x%sum==0; } }

x가 1234일 때, ( a%b: a를 b로 나눈 나머지, a/b : a를 b로 나눈 몫 )

1234 %10 = 4, 1234 /10 = 123
123 %10 = 3, 123 /10 = 12
12 %10 = 2, 12 /10 = 1
1 %10 = 1, 1 /10 = 0

이니까 sum에 x%10한 값을 더하고, x에는 x/10한 값을 넣는다.
return할 때 x의 원래 값을 사용해야 하니까, 여기서는 tempX 변수를 사용했다.

