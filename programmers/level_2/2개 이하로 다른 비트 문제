문제 설명

양의 정수 x에 대한 함수 f(x)를 다음과 같이 정의합니다.

x보다 크고 x와 비트가 1~2개 다른 수들 중에서 제일 작은 수

​

예를 들어,

f(2) = 3 입니다. 다음 표와 같이 2보다 큰 수들 중에서 비트가 다른 지점이 2개 이하이면서 제일 작은 수가 3이기 때문입니다.​

수

비트

다른 비트의 개수

2

000...0010

​

3

000...0011

1

f(7) = 11 입니다. 다음 표와 같이 7보다 큰 수들 중에서 비트가 다른 지점이 2개 이하이면서 제일 작은 수가 11이기 때문입니다.​

수

비트

다른 비트의 개수

7

000...0111

​

8

000...1000

4

9

000...1001

3

10

000...1010

3

11

000...1011

2

​

정수들이 담긴 배열 numbers가 매개변수로 주어집니다. 

numbers의 모든 수들에 대하여 각 수의 f 값을 배열에 차례대로 담아 return 하도록 solution 함수를 완성해주세요.

​

​

제한사항

  1 ≤ numbers의 길이 ≤ 100,000

  0 ≤ numbers의 모든 수 ≤ 1015

​

입출력 예

numbers

result

[2,7]

[3,11]

입출력 예 설명

입출력 예 #1

문제 예시와 같습니다.






내 풀이 < 실패 >

class Solution {
    public long[] solution(long[] numbers) {
        long[] answer = new long[numbers.length];
        
        for(int i=0; i<numbers.length; i++){
            long n = numbers[i];
            long n_ = n+1;
            while(true){
                if(Long.bitCount(n^n_)<=2){
                    answer[i] = n_;
                    break;
                }
                n_++;
            }
        }
        
        return answer;
    }
}
흙 테스트 10,11번에서 시간초과로 실패...


​


[월칸 코드 챌린지 시즌2] 5월 문제 해설  바로가기

와...이런식으로 생각해야 한다는 것이 참...아직의 나에겐 너무 어려운 것 같다.

​

​

다른사람풀이1

https://wellbell.tistory.com/2021111

// 프로그래머스 2개 이하로 다른 비트 문제
class Solution {
    public long[] solution(long[] numbers) {
        long[] answer = new long[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            if (numbers[i] % 2 == 0) {
                answer[i] = numbers[i] + 1;

            } else {
                StringBuilder temp = new StringBuilder();
                String binaryString = Long.toBinaryString(numbers[i]);
                if (!binaryString.contains("0")) {
                    // 맨 앞을 10으로
                    temp.append("10");

                    // 나머지 자리수를 모두 1로
                    temp.append(binaryString.substring(1).replace("0", "1"));

                } else {
                    int lastIndex = binaryString.lastIndexOf("0");
                    int firstOneIndex = binaryString.indexOf("1", lastIndex);
                    // 마지막 0을 1로 수정
                    temp.append(binaryString, 0, lastIndex).append("1");

                    // 마지막 0 다음 1을 0으로 수정
                    temp.append("0");

                    // 그 다음 비트열
                    temp.append(binaryString.substring(firstOneIndex + 1));
                }
                answer[i] = Long.parseLong(temp.toString(), 2);
            }
        }
        return answer;
    }
}
​

다른사람풀이2

코딩테스트 / 연습 월간 코드 챌린지 시즌2 / 2개 이하로 다른 비트 / 다른 사람의 풀이 / 유준혁 , 홍석주

class Solution {
    public long[] solution(long[] numbers) {
        long[] answer = new long[numbers.length];
        int idx = 0;
        for(long n : numbers) {
            int i = 0;
            while((n & (1l << i)) != 0) i++;
            long m = 1l << i;
            answer[idx++] = i == 0 ? n + 1 : (n + (m >> 1));
        }
        return answer;
    }
}
​

다른사람풀이3

코딩테스트 / 연습 월간 코드 챌린지 시즌2 / 2개 이하로 다른 비트 / 다른 사람의 풀이 / Super user do!

class Solution {
    public long[] solution(long[] numbers) {
        long[] answer = numbers.clone();
        for(int i = 0; i< answer.length; i++){
            answer[i]++;
            answer[i] += (answer[i]^numbers[i])>>>2;
        }
        return answer;
    }
}
​

허허 뭔가 근데 아직 코드를 완벽히 이해한 건 아니니까... 다시 보러 와야겠다.

일단 짝수의 2진수의 마지막이 0이라는 건 기억하자!!

​

​


*참고 사이트


[월간 코드 챌린지 시즌 2] 5월 문제 해설
코딩이 재미있는 사람들을 위한 챌린지! 프로그래머스에서 4월 15일, 5월 13일 두 번에 걸쳐 월간 코드 챌린지 시즌2가 진행되었습니다. 2021년 5월 13일 19시 30분부터 22시 30분까지 진행된 시즌2 5월 문제의 간..

prgms.tistory.com

 
프로그래머스 - 2개 이하로 다른 비트 문제 (자바)
https://programmers.co.kr/learn/courses/30/lessons/77885 코딩테스트 연습 - 2개 이하로 다른 비트 programmers.co.kr 생각보다 신경 써야하는게 많은 문제 기본적으로 짝수 홀수부터 나눠야한다. 짝수면 + 1만..

wellbell.tistory.com
