문제 설명

초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요.

​

제한사항

prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.

prices의 길이는 2 이상 100,000 이하입니다.

​

입출력 예

prices

return

[1, 2, 3, 2, 3]

[4, 3, 1, 1, 0]

입출력 예 설명

1초 시점의 ₩1은 끝까지 가격이 떨어지지 않았습니다.

2초 시점의 ₩2은 끝까지 가격이 떨어지지 않았습니다.

3초 시점의 ₩3은 1초뒤에 가격이 떨어집니다. 따라서 1초간 가격이 떨어지지 않은 것으로 봅니다.

4초 시점의 ₩2은 1초간 가격이 떨어지지 않았습니다.

5초 시점의 ₩3은 0초간 가격이 떨어지지 않았습니다.

​

※ 공지 - 2019년 2월 28일 지문이 리뉴얼되었습니다.




내 풀이

class Solution {
    public int[] solution(int[] prices) {
        int[] answer = new int[prices.length];
        
        for(int i=0; i<prices.length-1; i++){
            // drop -> true:주식 가격 떨어짐, false:주식 가격 유지 혹은 오름
            boolean drop = false;
            int j = i+1;
            int time = 1;
            while(!drop){
                if(prices[i]>prices[j]){
                    answer[i] = time;
                    drop = true;
                }else if(j<prices.length-1){
                    time++;
                    j++;
                }else{
                    answer[i] = time;
                    drop = true;
                }
            }
        }
        
        return answer;
    }
}
테스트케이스를 봤을때,

prices = {1, 2, 3, 2, 3} 에서
마지막 인덱스의 경우, 0초간 가격이 떨어지지 않고
뒤에서 두 번째 인덱스의 경우, 마지막 인덱스에서 

1. 가격이 떨어지면 1초뒤에 가격이 떨어진 거고
2. 가격이 떨어지지 않으면 1초간 가격이 떨어지지 않은 거다.

결국 뒤에서 두 번째 인덱스는 마지막에 값이 떨어지던 아니던 answer값이 1이 나온다는 소리...
이걸 else문에서 처리한 것~

실행시간은 정확성 테스트에서는 0.03 ~ 0.32ms, 효율성 테스트에서는 12.64 ~ 20.98ms

​



다른사람풀이1

코딩테스트 연습 / 스택/큐 / 주식가격 / 다른 사람의 풀이 / - , 탈퇴한 사용자 , nawhew

class Solution {
    public int[] solution(int[] prices) {
        int len = prices.length;
        int[] answer = new int[len];
        int i, j;
        for (i = 0; i < len; i++) {
            for (j = i + 1; j < len; j++) {
                answer[i]++;
                if (prices[i] > prices[j])
                    break;
            }
        }
        return answer;
    }
}
호호...이건 내 풀이의 불필요한 부분을 제거한 깔끔한 코드 버전....!

​

​

다른사람풀이2 < Stack >

코딩테스트 연습 / 스택/큐 / 주식가격 / 다른 사람의 풀이 / - , - , - , - , 이하섭 외 6 명

import java.util.Stack;

class Solution {
    public int[] solution(int[] prices) {
        Stack<Integer> beginIdxs = new Stack<>();
        int i=0;
        int[] terms = new int[prices.length];

        beginIdxs.push(i);
        for (i=1; i<prices.length; i++) {
            while (!beginIdxs.empty() && prices[i] < prices[beginIdxs.peek()]) {
                int beginIdx = beginIdxs.pop();
                terms[beginIdx] = i - beginIdx;
            }
            beginIdxs.push(i);
        }

        while (!beginIdxs.empty()) {
            int beginIdx = beginIdxs.pop();
            terms[beginIdx] = i - beginIdx - 1;
        }

        return terms;
    }
}
ㅎ... 찬찬히 하나하나 뜯어보면 알아듣겠는데... 이 코드를 나한테 작성하라고 하면 못할 것같다....
